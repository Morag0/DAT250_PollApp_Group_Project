version: '3.9'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongo:27017/pollapp
      - RABBITMQ_URI=amqp://rabbitmq
      - PORT=3000
      - POSTGRES_URI=postgresql://feed-app-user:feedapp123@postgres:5432/feed_app_sql
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
      postgres:
        condition: service_started
    networks:
      - poll-network

  frontend:
    build:
      context: ./pollApp
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    networks:
      - poll-network

  mongo:
    image: mongo
    container_name: pollapp-mongo
    ports:
      - "27017:27017"
    networks:
      - poll-network

  rabbitmq:
    image: rabbitmq:management
    container_name: pollapp-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - poll-network

  postgres:
    image: postgres:14
    container_name: postgres-feedapp
    environment:
      POSTGRES_USER: feed-app-user
      POSTGRES_PASSWORD: feedapp123
      POSTGRES_DB: feed_app_sql
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - poll-network

networks:
  poll-network:
    driver: bridge

volumes:
  postgres-data:
