services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/feedAppDB
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=feed-app-user
      - PG_PASSWORD=feedapp123
      - PG_DATABASE=feed_app_sql
      - JWT_SECRET=your_jwt_secret
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - mongo
      - postgres
      - rabbitmq

  frontend:
    build:
      context: ./pollApp
      dockerfile: Dockerfile
    ports:
      - "5173:80" # Maps port 80 in the container to port 8080 on the host
    environment:
      - NODE_ENV=production

  mongo:
    image: mongo:5
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: feed-app-user
      POSTGRES_PASSWORD: feedapp123
      POSTGRES_DB: feed_app_sql
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

volumes:
  mongo_data:
  postgres_data:

